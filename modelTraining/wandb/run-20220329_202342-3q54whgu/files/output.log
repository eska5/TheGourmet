Num GPUs Available:  0
-- Training set --
Number of pictures: 70700
Number of different labels: 101
-- Test set --
Number of pictures: 20200
Number of different labels: 101
-- Validation set --
Number of pictures: 10100
Number of different labels: 101
Labels: ['foie_gras' 'omelette' 'beef_carpaccio' 'hot_dog' 'poutine' 'churros'
 'spaghetti_carbonara' 'ramen' 'caprese_salad' 'cheese_plate' 'crab_cakes'
 'chicken_quesadilla' 'escargots' 'macarons' 'chicken_wings'
 'baby_back_ribs' 'baklava' 'hamburger' 'clam_chowder' 'cannoli'
 'apple_pie' 'steak' 'falafel' 'carrot_cake' 'lobster_bisque'
 'shrimp_and_grits' 'spaghetti_bolognese' 'paella' 'risotto' 'pancakes'
 'ceviche' 'red_velvet_cake' 'gnocchi' 'hot_and_sour_soup' 'caesar_salad'
 'grilled_salmon' 'dumplings' 'pulled_pork_sandwich' 'spring_rolls'
 'breakfast_burrito' 'guacamole' 'hummus' 'french_fries' 'greek_salad'
 'mussels' 'chocolate_cake' 'ravioli' 'tuna_tartare' 'lasagna' 'tiramisu'
 'french_onion_soup' 'lobster_roll_sandwich' 'fish_and_chips' 'pad_thai'
 'creme_brulee' 'french_toast' 'seaweed_salad' 'scallops' 'bread_pudding'
 'croque_madame' 'samosa' 'grilled_cheese_sandwich' 'donuts' 'takoyaki'
 'pork_chop' 'sashimi' 'fried_rice' 'miso_soup' 'nachos' 'deviled_eggs'
 'huevos_rancheros' 'garlic_bread' 'sushi' 'edamame' 'chicken_curry'
 'eggs_benedict' 'beignets' 'pho' 'fried_calamari' 'beef_tartare'
 'strawberry_shortcake' 'cheesecake' 'panna_cotta' 'club_sandwich'
 'ice_cream' 'cup_cakes' 'tacos' 'bruschetta' 'oysters' 'onion_rings'
 'pizza' 'gyoza' 'peking_duck' 'waffles' 'prime_rib' 'beet_salad'
 'bibimbap' 'macaroni_and_cheese' 'frozen_yogurt' 'chocolate_mousse'
 'filet_mignon']
Found 70700 validated image filenames belonging to 101 classes.
Found 10100 validated image filenames belonging to 101 classes.
Found 20200 validated image filenames belonging to 101 classes.
Epoch 1/10
WARNING:tensorflow:`input_shape` is undefined or non-square, or `rows` is not in [96, 128, 160, 192, 224]. Weights for input shape (224, 224) will be loaded as the default.
Traceback (most recent call last):
  File "d:\Politechnika\The Gourmet\Development\modelTraining\network.py", line 154, in <module>
    history = model.fit(
  File "C:\Users\LocalAdmin\AppData\Local\Programs\Python\Python39\lib\site-packages\wandb\integration\keras\keras.py", line 168, in new_v2
    return old_v2(*args, **kwargs)
  File "C:\Users\LocalAdmin\AppData\Local\Programs\Python\Python39\lib\site-packages\keras\utils\traceback_utils.py", line 67, in error_handler
    raise e.with_traceback(filtered_tb) from None
  File "C:\Users\LocalAdmin\AppData\Local\Programs\Python\Python39\lib\site-packages\tensorflow\python\eager\execute.py", line 54, in quick_execute
    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,
tensorflow.python.framework.errors_impl.InvalidArgumentError: Graph execution error:
Detected at node 'categorical_crossentropy/softmax_cross_entropy_with_logits' defined at (most recent call last):
    File "d:\Politechnika\The Gourmet\Development\modelTraining\network.py", line 154, in <module>
      history = model.fit(
    File "C:\Users\LocalAdmin\AppData\Local\Programs\Python\Python39\lib\site-packages\wandb\integration\keras\keras.py", line 168, in new_v2
      return old_v2(*args, **kwargs)
    File "C:\Users\LocalAdmin\AppData\Local\Programs\Python\Python39\lib\site-packages\keras\utils\traceback_utils.py", line 64, in error_handler
      return fn(*args, **kwargs)
    File "C:\Users\LocalAdmin\AppData\Local\Programs\Python\Python39\lib\site-packages\keras\engine\training.py", line 1384, in fit
      tmp_logs = self.train_function(iterator)
    File "C:\Users\LocalAdmin\AppData\Local\Programs\Python\Python39\lib\site-packages\keras\engine\training.py", line 1021, in train_function
      return step_function(self, iterator)
    File "C:\Users\LocalAdmin\AppData\Local\Programs\Python\Python39\lib\site-packages\keras\engine\training.py", line 1010, in step_function
      outputs = model.distribute_strategy.run(run_step, args=(data,))
    File "C:\Users\LocalAdmin\AppData\Local\Programs\Python\Python39\lib\site-packages\keras\engine\training.py", line 1000, in run_step
      outputs = model.train_step(data)
    File "C:\Users\LocalAdmin\AppData\Local\Programs\Python\Python39\lib\site-packages\keras\engine\training.py", line 860, in train_step
      loss = self.compute_loss(x, y, y_pred, sample_weight)
    File "C:\Users\LocalAdmin\AppData\Local\Programs\Python\Python39\lib\site-packages\keras\engine\training.py", line 918, in compute_loss
      return self.compiled_loss(
    File "C:\Users\LocalAdmin\AppData\Local\Programs\Python\Python39\lib\site-packages\keras\engine\compile_utils.py", line 201, in __call__
      loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    File "C:\Users\LocalAdmin\AppData\Local\Programs\Python\Python39\lib\site-packages\keras\losses.py", line 141, in __call__
      losses = call_fn(y_true, y_pred)
    File "C:\Users\LocalAdmin\AppData\Local\Programs\Python\Python39\lib\site-packages\keras\losses.py", line 245, in call
      return ag_fn(y_true, y_pred, **self._fn_kwargs)
    File "C:\Users\LocalAdmin\AppData\Local\Programs\Python\Python39\lib\site-packages\keras\losses.py", line 1789, in categorical_crossentropy
      return backend.categorical_crossentropy(
    File "C:\Users\LocalAdmin\AppData\Local\Programs\Python\Python39\lib\site-packages\keras\backend.py", line 5098, in categorical_crossentropy
      return tf.nn.softmax_cross_entropy_with_logits(
Node: 'categorical_crossentropy/softmax_cross_entropy_with_logits'
logits and labels must be broadcastable: logits_size=[32,36] labels_size=[32,101]
	 [[{{node categorical_crossentropy/softmax_cross_entropy_with_logits}}]] [Op:__inference_train_function_7538]