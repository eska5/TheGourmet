pipeline {
    agent any

    stages {
        stage('Clean up') {
            steps {
                buildName "${Name}"
                sh 'cd /var/data/TheGourmet/deployment/app; sudo docker-compose down'
                echo 'containers stopped'
                script{
                    if (params.Flutter==true){
                        sh 'sudo docker rmi flutter:latest';
                        echo 'flutter image deleted'
                    }
                    if (params.Inference_Server==true){
                        sh 'sudo docker rmi inf_server:latest';
                        echo 'inf server image deleted'
                    }
                    if (params.Meals_Operator==true){
                        sh 'sudo docker rmi meal_opr:latest';
                        echo 'meals operator image deleted'
                    }
                }
                sh 'sudo rm -rf /var/data/TheGourmet'
                echo 'old repo deleted'
                }
        }
        stage('Code checkout') {
            steps {
                sh 'cd /var/data; git clone -b ${Branch} https://github.com/eska5/TheGourmet.git'
                echo "Repository cloned"
            }
        }
        stage('Build inference server') {
            when {
                expression { return params.Inference_Server }
            }
            steps {
                sh 'cd /var/data/TheGourmet/src/inference_server; sudo docker build -t inf_server .'
                echo "Inference server image build"
            }
        }
        stage('Build meals operator') {
            when {
                expression { return params.Meals_Operator }
            }
            steps {
                sh 'cd /var/data/TheGourmet/src/meals_operator; sudo docker build -t meal_opr .'
                echo "Meals operator image build"
            }
        }
        stage('Build flutter UI') {
            when {
                expression { return params.UI }
            }
            steps {
                sh 'cd /var/data/TheGourmet/src/app_ui; sudo docker build -t flutter .'
                echo "frontend image build"
            }
        }
        stage('App startup') {
            steps {
                sh 'cd /var/data/TheGourmet/deployment/App; sudo docker-compose up -d'
                echo "App build finished successful"
            }
        }
    }
}
