{"ast":null,"code":"export const sendToServer = (foodname, foodimage) => {\n  const backend = 'http://localhost:8080';\n  const xhttp = new XMLHttpRequest();\n  xhttp.open(\"POST\", backend + '/api/', true);\n  const request = {\n    'name': foodname,\n    'img': foodimage\n  };\n  xhttp.setRequestHeader('Content-Type', 'application/json');\n  xhttp.send(JSON.stringify(request));\n};\nexport const imgToBase64 = image => {\n  var base64String = \"\";\n  var file = image;\n  var reader = new FileReader();\n  console.log(\"next\");\n\n  reader.onload = function () {\n    base64String = reader.result.replace(\"data:\", \"\").replace(/^.+,/, \"\"); // alert(imageBase64Stringsep);\n\n    console.log(base64String);\n  };\n\n  return base64String;\n  reader.readAsDataURL(file);\n};\n\nfunction convertToDataURLviaCanvas(url, callback, outputFormat) {\n  var img = new Image();\n  img.crossOrigin = 'Anonymous';\n\n  img.onload = function () {\n    var canvas = document.createElement('CANVAS');\n    var ctx = canvas.getContext('2d');\n    var dataURL;\n    canvas.height = this.height;\n    canvas.width = this.width;\n    ctx.drawImage(this, 0, 0);\n    dataURL = canvas.toDataURL(outputFormat);\n    callback(dataURL);\n    canvas = null;\n  };\n\n  img.src = url;\n}","map":{"version":3,"sources":["C:/Users/lukin/OneDrive/INF/Gourmet/src/Functions/upload.js"],"names":["sendToServer","foodname","foodimage","backend","xhttp","XMLHttpRequest","open","request","setRequestHeader","send","JSON","stringify","imgToBase64","image","base64String","file","reader","FileReader","console","log","onload","result","replace","readAsDataURL","convertToDataURLviaCanvas","url","callback","outputFormat","img","Image","crossOrigin","canvas","document","createElement","ctx","getContext","dataURL","height","width","drawImage","toDataURL","src"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,CAACC,QAAD,EAAUC,SAAV,KAAwB;AAChD,QAAMC,OAAO,GAAG,uBAAhB;AACA,QAAMC,KAAK,GAAG,IAAIC,cAAJ,EAAd;AACAD,EAAAA,KAAK,CAACE,IAAN,CAAW,MAAX,EAAmBH,OAAO,GAAG,OAA7B,EAAsC,IAAtC;AACA,QAAMI,OAAO,GAAG;AACZ,YAAQN,QADI;AAEZ,WAAOC;AAFK,GAAhB;AAIAE,EAAAA,KAAK,CAACI,gBAAN,CAAuB,cAAvB,EAAuC,kBAAvC;AACAJ,EAAAA,KAAK,CAACK,IAAN,CAAWC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAAX;AACH,CAVM;AAWP,OAAO,MAAMK,WAAW,GAAIC,KAAD,IAAW;AAClC,MAAIC,YAAY,GAAG,EAAnB;AACA,MAAIC,IAAI,GAAGF,KAAX;AACA,MAAIG,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AAEAH,EAAAA,MAAM,CAACI,MAAP,GAAgB,YAAY;AACxBN,IAAAA,YAAY,GAAGE,MAAM,CAACK,MAAP,CAAcC,OAAd,CAAsB,OAAtB,EAA+B,EAA/B,EAAmCA,OAAnC,CAA2C,MAA3C,EAAmD,EAAnD,CAAf,CADwB,CAExB;;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYL,YAAZ;AACH,GAJD;;AAKA,SAAOA,YAAP;AACAE,EAAAA,MAAM,CAACO,aAAP,CAAqBR,IAArB;AACD,CAbI;;AAeP,SAASS,yBAAT,CAAmCC,GAAnC,EAAwCC,QAAxC,EAAkDC,YAAlD,EAA+D;AAC3D,MAAIC,GAAG,GAAG,IAAIC,KAAJ,EAAV;AACAD,EAAAA,GAAG,CAACE,WAAJ,GAAkB,WAAlB;;AACAF,EAAAA,GAAG,CAACR,MAAJ,GAAa,YAAU;AACnB,QAAIW,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACA,QAAIC,GAAG,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAV;AACA,QAAIC,OAAJ;AACAL,IAAAA,MAAM,CAACM,MAAP,GAAgB,KAAKA,MAArB;AACAN,IAAAA,MAAM,CAACO,KAAP,GAAe,KAAKA,KAApB;AACAJ,IAAAA,GAAG,CAACK,SAAJ,CAAc,IAAd,EAAoB,CAApB,EAAuB,CAAvB;AACAH,IAAAA,OAAO,GAAGL,MAAM,CAACS,SAAP,CAAiBb,YAAjB,CAAV;AACAD,IAAAA,QAAQ,CAACU,OAAD,CAAR;AACAL,IAAAA,MAAM,GAAG,IAAT;AACH,GAVD;;AAWAH,EAAAA,GAAG,CAACa,GAAJ,GAAUhB,GAAV;AACH","sourcesContent":["export const sendToServer = (foodname,foodimage) => {\r\n    const backend = 'http://localhost:8080'\r\n    const xhttp = new XMLHttpRequest();\r\n    xhttp.open(\"POST\", backend + '/api/', true);\r\n    const request = {\r\n        'name': foodname,\r\n        'img': foodimage,\r\n    };\r\n    xhttp.setRequestHeader('Content-Type', 'application/json');\r\n    xhttp.send(JSON.stringify(request));\r\n}\r\nexport const imgToBase64 = (image) => {\r\n    var base64String = \"\";\r\n    var file = image;\r\n    var reader = new FileReader();\r\n    console.log(\"next\");\r\n      \r\n    reader.onload = function () {\r\n        base64String = reader.result.replace(\"data:\", \"\").replace(/^.+,/, \"\");\r\n        // alert(imageBase64Stringsep);\r\n        console.log(base64String);\r\n    }\r\n    return base64String;\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\nfunction convertToDataURLviaCanvas(url, callback, outputFormat){\r\n    var img = new Image();\r\n    img.crossOrigin = 'Anonymous';\r\n    img.onload = function(){\r\n        var canvas = document.createElement('CANVAS');\r\n        var ctx = canvas.getContext('2d');\r\n        var dataURL;\r\n        canvas.height = this.height;\r\n        canvas.width = this.width;\r\n        ctx.drawImage(this, 0, 0);\r\n        dataURL = canvas.toDataURL(outputFormat);\r\n        callback(dataURL);\r\n        canvas = null; \r\n    };\r\n    img.src = url;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}